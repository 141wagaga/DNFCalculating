from math import *

from PublicReference.base import *

class 刹那永恒主动技能(主动技能):

    def 等效CD(self, 武器类型):
        if 武器类型 == '魔杖':
            return round(self.CD / self.恢复 * 1.0, 1)
        if 武器类型 == '法杖':
            return round(self.CD / self.恢复 * 1.1, 1)

#技能数据录入：lv15技能（1-基础+12），lv20-45（1-基础+13），lv50（12-23）,lv60-85(1-基础+7),其余技能等级数据为推算

刹那永恒等级 = 100 + 5

class 刹那永恒技能0(刹那永恒主动技能):
    名称 = '冰魄剑'
    所在等级 = 15
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据1 = [0 , 627 , 689 , 755 , 821 , 885 , 946 , 1011 , 1075 , 1143 , 1207 , 1272 , 1333 , 1397 , 1466 , 1528 , 1595 , 1661 , 1728 , 1792 , 1854 , 1920 , 1982 , 2050 , 2115 , 2179 , 2240 , 2306 , 2372 , 2437 , 2502 , 2565 , 2627 , 2694 , 2759 , 2824 , 2887 , 2952 , 3018 , 3081 , 3146 , 3208 , 3275 , 3342 , 3404 , 3473 , 3534 , 3601 , 3666 , 3730 , 3795 , 3859 , 3924 , 3988 , 4052 , 4117 , 4181 , 4246 , 4311 , 4375 , 4440]
    攻击次数 = 2
    数据2 = [0 , 750 , 827 , 905 , 979 , 1058 , 1136 , 1214 , 1292 , 1372 , 1449 , 1527 , 1602 , 1680 , 1758 , 1835 , 1915 , 1994 , 2070 , 2149 , 2223 , 2301 , 2380 , 2458 , 2537 , 2615 , 2692 , 2771 , 2845 , 2924 , 3002 , 3077 , 3157 , 3231 , 3309 , 3388 , 3464 , 3544 , 3618 , 3696 , 3775 , 3850 , 3931 , 4005 , 4082 , 4167 , 4246 , 4321 , 4399 , 4476 , 4552 , 4629 , 4708 , 4786 , 4865 , 4939 , 5017 , 5096 , 5172 , 5250 , 5328]
    攻击次数2 = 1
    演出时间 = 1.0
    CD = 5.0
    TP成长 = 0.08
    TP上限 = 7

    def 等效百分比(self, 武器类型):
        return (self.数据1[self.等级] * self.攻击次数 + self.数据2[self.等级] * self.攻击次数2) * (1 + self.TP成长 * self.TP等级) * self.倍率

    def 技能形态改变(self):
        self.攻击次数2 = 0

class 刹那永恒技能1(被动技能):
    名称 = '冰武精通'
    所在等级 = 15
    等级上限 = 20
    基础等级 = 10
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.10 + 0.01 * self.等级, 5)

class 刹那永恒技能2(刹那永恒主动技能):
    名称 = '寒冰连枪'
    所在等级 = 20
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 = [0 , 1775 , 1955 , 2135 , 2315 , 2495 , 2675 , 2860 , 3040 , 3220 , 3400 , 3580 , 3760 , 3940 , 4120 , 4300 , 4480 , 4660 , 4840 , 5020 , 5205 , 5385 , 5565 , 5745 , 5925 , 6105 , 6285 , 6465 , 6645 , 6825 , 7005 , 7185 , 7365 , 7550 , 7730 , 7910 , 8090 , 8270 , 8450 , 8630 , 8810 , 8990 , 9170 , 9350 , 9530 , 9710 , 9890 , 10075 , 10255 , 10435 , 10615 , 10795 , 10975 , 11155 , 11335 , 11515 , 11695 , 11875 , 12055 , 12235 , 12415]
    演出时间 = 1.5
    CD = 3.0
    TP成长 = 0.10
    TP上限 = 7
    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * (1 + self.TP成长 * self.TP等级) * self.倍率

class 刹那永恒技能3(刹那永恒主动技能):
    名称 = '冰魄旋枪'
    所在等级 = 25
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 = [0 , 4048 , 4448 , 4864 , 5280 , 5680 , 6096 , 6512 , 6912 , 7328 , 7744 , 8144 , 8560 , 8976 , 9392 , 9792 , 10208 , 10624 , 11024 , 11440 , 11856 , 12256 , 12672 , 13088 , 13488 , 13904 , 14320 , 14720 , 15136 , 15552 , 15952 , 16368 , 16784 , 17200 , 17600 , 18016 , 18432 , 18832 , 19248 , 19664 , 20064 , 20480 , 20896 , 21296 , 21712 , 22128 , 22528 , 22944 , 23360 , 23760 , 24176 , 24592 , 24992 , 25408 , 25824 , 26224 , 26640 , 27056 , 27456 , 27872 , 28288]
    演出时间 = 1.5
    CD = 7.0
    TP成长 = 0.10
    TP上限 = 7
    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * (1 + self.TP成长 * self.TP等级) * self.倍率

class 刹那永恒技能4(刹那永恒主动技能):
    名称 = '冰霜之径'
    所在等级 = 25
    等级上限 = 20
    基础等级 = 10
    是否有伤害 = 0

    def 属强加成(self):
        if self.等级 == 0:
            return 0
        else:
            return (30 + self.等级 * 4)

    def 加成倍率(self, 武器类型):
            return 1.0


class 刹那永恒技能5(被动技能):
    名称 = '冰之领悟'
    所在等级 = 25
    等级上限 = 20
    基础等级 = 10
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        elif self.等级 <= 10:
            return (1.02 + self.等级 * 0.01)
        else:
            return (1.12 + (self.等级 - 10) * 0.02)

    def 魔法攻击力倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        elif self.等级 <= 10:
            return (1.02 + self.等级 * 0.01)
        else:
            return (1.12 + (self.等级 - 10) * 0.02)


class 刹那永恒技能6(刹那永恒主动技能):
    名称 = '冰魄之弓'
    所在等级 = 30
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 = [0 , 6163 , 6790 , 7414 , 8041 , 8665 , 9292 , 9915 , 10542 , 11166 , 11793 , 12417 , 13044 , 13668 , 14294 , 14918 , 15545 , 16169 , 16796 , 17420 , 18047 , 18674 , 19297 , 19924 , 20548 , 21175 , 21799 , 22426 , 23050 , 23676 , 24300 , 24927 , 25551 , 26178 , 26802 , 27429 , 28053 , 28679 , 29303 , 29930 , 30557 , 31181 , 31808 , 32432 , 33088 , 33682 , 34309 , 34933 , 35560 , 36184 , 36811 , 37435 , 38061 , 38685 , 39312 , 39936 , 40563 , 41187 , 41814 , 42438 , 43065]
    演出时间 = 1.5
    CD = 8.0
    TP成长 = 0.10
    TP上限 = 7
    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * (1 + self.TP成长 * self.TP等级) * self.倍率

class 刹那永恒技能7(刹那永恒主动技能):
    名称 = '破冰飞刃'
    所在等级 = 30
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 = [0 , 5808 , 6384 , 6984 , 7560 , 8160 , 8760 , 9336 , 9936 , 10512 , 11112 , 11688 , 12288 , 12888 , 13464 , 14064 , 14640 , 15240 , 15816 , 16416 , 17016 , 17592 , 18192 , 18768 , 19368 , 19944 , 20544 , 21144 , 21720 , 22320 , 22896 , 23496 , 24072 , 24672 , 25272 , 25848 , 26448 , 27024 , 27624 , 28200 , 28800 , 29400 , 29976 , 30576 , 31152 , 31752 , 32328 , 32928 , 33528 , 34104 , 34704 , 35280 , 35880 , 36456 , 37056 , 37632 , 38232 , 38808 , 39408 , 39984 , 40584]
    演出时间 = 1.0
    CD = 8.0
    TP成长 = 0.10
    TP上限 = 7
    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * (1 + self.TP成长 * self.TP等级) * self.倍率

class 刹那永恒技能8(被动技能):
    名称 = '水晶剑'
    所在等级 = 30
    等级上限 = 11
    基础等级 = 1
    关联技能 = ['冰魄剑']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return (2.00 + (self.等级-1) * 0.02)


class 刹那永恒技能9(刹那永恒主动技能):
    名称 = '旋冰穿刺'
    所在等级 = 35
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 = [0 , 8181 , 9011 , 9842 , 10672 , 11502 , 12332 , 13162 , 13992 , 14822 , 15652 , 16482 , 17312 , 18142 , 18972 , 19802 , 20632 , 21462 , 22293 , 23123 , 23953 , 24783 , 25613 , 26443 , 27273 , 28103 , 28933 , 29763 , 30593 , 31423 , 32253 , 33083 , 33913 , 34744 , 35574 , 36404 , 37234 , 38064 , 38894 , 39724 , 40554 , 41384 , 42214 , 43044 , 43874 , 44704 , 45534 , 46364 , 47194 , 48025 , 48855 , 49685 , 50515 , 51345 , 52175 , 53005 , 53835 , 54665 , 55495 , 56325 , 57155]
    演出时间 = 1.5
    CD = 15.0
    TP成长 = 0.10
    TP上限 = 7

    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * (1 + self.TP成长 * self.TP等级) * self.倍率

class 刹那永恒技能10(刹那永恒主动技能):
    名称 = '冰魄锤击'
    所在等级 = 35
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 =[0 , 7737 , 8522 , 9307 , 10092 , 10877 , 11662 , 12447 , 13232 , 14017 , 14802 , 15587 , 16372 , 17157 , 17942 , 18727 , 19512 , 20296 , 21081 , 21866 , 22651 , 23436 , 24221 , 25006 , 25791 , 26576 , 27361 , 28146 , 28931 , 29716 , 30501 , 31286 , 32071 , 32856 , 33641 , 34426 , 35211 , 35996 , 36781 , 37566 , 38351 , 39136 , 39921 , 40706 , 41491 , 42276 , 43061 , 43846 , 44630 , 45415 , 46200 , 46985 , 47770 , 48555 , 49340 , 50125 , 50910 , 51695 , 52480 , 53265 , 54050]
    攻击倍率 = 1.0
    演出时间 = 1.0
    CD = 18.0
    TP成长 = 0.10
    TP上限 = 7

    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * 1.20 * self.攻击倍率 * (1 + self.TP成长 * self.TP等级) * self.倍率

    是否有护石 = 1
    def 装备护石(self):
        self.攻击倍率 *= 1.27

class 刹那永恒技能11(刹那永恒主动技能):
    名称 = '极冰绽放'
    所在等级 = 40
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据1 = [0 , 777 , 855 , 934 , 1013 , 1092 , 1171 , 1250 , 1328 , 1407 , 1486 , 1565 , 1644 , 1723 , 1801 , 1880 , 1959 , 2038 , 2117 , 2196 , 2274 , 2353 , 2432 , 2511 , 2590 , 2669 , 2747 , 2826 , 2905 , 2984 , 3063 , 3142 , 3221 , 3299 , 3378 , 3457 , 3536 , 3615 , 3694 , 3772 , 3851 , 3930 , 4009 , 4088 , 4167 , 4245 , 4324 , 4403 , 4482 , 4561 , 4640 , 4718 , 4797 , 4876 , 4955 , 5034 , 5113 , 5191 , 5270 , 5349 , 5428]
    攻击倍率 = 1.95
    数据2 = [0 , 3433 , 3782 , 4130 , 4479 , 4827 , 5175 , 5523 , 5872 , 6220 , 6568 , 6917 , 7265 , 7613 , 7962 , 8310 , 8658 , 9007 , 9355 , 9703 , 10052 , 10400 , 10748 , 11097 , 11445 , 11793 , 12142 , 12490 , 12839 , 13187 , 13535 , 13884 , 14232 , 14580 , 14929 , 15277 , 15625 , 15974 , 16322 , 16670 , 17019 , 17367 , 17715 , 18064 , 18412 , 18760 , 19109 , 19457 , 19805 , 20154 , 20502 , 20850 , 21199 , 21547 , 21895 , 22244 , 22592 , 22940 , 23289 , 23637 , 23985]
    攻击倍率2 = 2.35
    演出时间 = 2.0
    CD = 20.0
    TP成长 = 0.10
    TP上限 = 7

    def 等效百分比(self, 武器类型):
        return (self.数据1[self.等级] * 4 *self.攻击倍率 + self.数据2[self.等级] * self.攻击倍率2) * (1 + self.TP成长 * self.TP等级) * self.倍率

    是否有护石 = 1
    def 装备护石(self):
        self.攻击倍率 *= 1.11
        self.攻击倍率2 *= 1.23
        self.CD *= 0.90


class 刹那永恒技能12(刹那永恒主动技能):
    名称 = '冰雪风暴'
    所在等级 = 45
    等级上限 = 60
    等级精通 = 50
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据1 = [0 , 879 , 968 , 1058 , 1147 , 1236 , 1325 , 1415 , 1504 , 1593 , 1682 , 1772 , 1861 , 1950 , 2039 , 2129 , 2218 , 2307 , 2396 , 2486 , 2575 , 2664 , 2753 , 2843 , 2932 , 3021 , 3110 , 3200 , 3289 , 3378 , 3467 , 3556 , 3646 , 3735 , 3824 , 3913 , 4003 , 4092 , 4181 , 4270 , 4360 , 4449 , 4538 , 4627 , 4717 , 4806 , 4895 , 4984 , 5074 , 5163 , 5252 , 5341 , 5431 , 5520 , 5609 , 5698 , 5788 , 5877 , 5966 , 6055 , 6145]
    攻击次数 = 14
    攻击倍率 = 1.0
    数据2 = [0 , 8588 , 9459 , 10330 , 11202 , 12073 , 12944 , 13815 , 14687 , 15558 , 16429 , 17300 , 18172 , 19043 , 19914 , 20786 , 21657 , 22528 , 23399 , 24271 , 25142 , 26013 , 26884 , 27756 , 28627 , 29498 , 30370 , 31241 , 32112 , 32983 , 33855 , 34726 , 35597 , 36468 , 37340 , 38211 , 39082 , 39954 , 40825 , 41696 , 42567 , 43439 , 44310 , 45181 , 46052 , 46924 , 47795 , 48666 , 49537 , 50409 , 51280 , 52151 , 53022 , 53894 , 54765 , 55636 , 56507 , 57379 , 58250 , 59121 , 59992]
    攻击次数2 = 1
    攻击倍率2 = 1.0
    演出时间 = 2.5
    CD = 40.0
    TP成长 = 0.10
    TP上限 = 7

    def 等效百分比(self, 武器类型):
        return (self.数据1[self.等级] * self.攻击次数 *self.攻击倍率 + self.数据2[self.等级] * self.攻击次数2 * self.攻击倍率2) * (1 + self.TP成长 * self.TP等级) * self.倍率

    是否有护石 = 1
    def 装备护石(self):
        self.攻击次数 = 16
        self.攻击倍率2 *= 1.15

class 刹那永恒技能13(被动技能):
    名称 = '冰封奥义'
    所在等级 = 48
    等级上限 = 40
    基础等级 = 20

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.105 + 0.015 * self.等级, 5)

#一觉数据为小冰轮攻击次数为40次时数据
class 刹那永恒技能14(刹那永恒主动技能):
    名称 = '千旋冰轮破'
    所在等级 = 50
    等级上限 = 40
    等级精通 = 30
    学习间隔 = 5
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 = [0 , 58535 , 72101 , 85667 , 99233 , 112840 , 126406 , 139996 , 153562 , 167128 , 180734 , 194300 , 207867 , 221433 , 234999 , 248605 , 262171 , 275761 , 289327 , 302894 , 316500 , 330066 , 343632 , 357222 , 370788 , 384394 , 397961 , 411527 , 425093 , 438683 , 452289 , 465855 , 479421 , 492988 , 506554 , 520184 , 533750 , 547316 , 560882 , 574448 , 588055]
    CD = 145.0

    def 等效百分比(self, 武器类型):
        return self.数据[self.等级]  * self.倍率

class 刹那永恒技能15(刹那永恒主动技能):
    名称 = '冰凌破'
    所在等级 = 60
    等级上限 = 40
    等级精通 = 30
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 = [0 , 20179 , 22206 , 24259 , 26311 , 28364 , 30417 , 32444 , 34497 , 36549 , 38602 , 40655 , 42682 , 44735 , 46787 , 48840 , 50893 , 52920 , 54973 , 57025 , 59078 , 61131 , 63158 , 65211 , 67263 , 69316 , 71344 , 73396 , 75449 , 77501 , 79554 , 81581 , 83634 , 85686 , 87739 , 89791 , 91819 , 93871 , 95924 , 97976 , 100004]
    攻击倍率 = 1.0
    演出时间 = 2.0
    CD = 30.0
    TP成长 = 0.10
    TP上限 = 7

    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * self.攻击倍率 * (1 + self.TP成长 * self.TP等级) * self.倍率

    是否有护石 = 1
    def 装备护石(self):
        self.攻击倍率 *= 1.22


class 刹那永恒技能16(刹那永恒主动技能):
    名称 = '千里冰封'
    所在等级 = 70
    等级上限 = 40
    等级精通 = 30
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 =[0 , 9584 , 10556 , 11528 , 12501 , 13473 , 14445 , 15418 , 16390 , 17362 , 18335 , 19307 , 20279 , 21252 , 22224 , 23196 , 24168 , 25141 , 26113 , 27085 , 28058 , 29030 , 30002 , 30975 , 31947 , 32919 , 33892 , 34864 , 35836 , 36809 , 37781 , 38753 , 39726 , 40698 , 41670 , 42643 , 43615 , 44587 , 45560 , 46532 , 47504]
    攻击次数 = 3
    攻击倍率 = 1.0
    演出时间 = 2.0
    CD = 50.0
    TP成长 = 0.10
    TP上限 = 7

    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * self.攻击倍率 * self.攻击次数 * (1 + self.TP成长 * self.TP等级) * self.倍率

    是否有护石 = 1
    def 装备护石(self):
        self.攻击次数 = 1
        self.攻击倍率 = 3.56

class 刹那永恒技能17(被动技能):
    名称 = '冰之技艺'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 11
    关联技能 = ['冰魄之弓','破冰飞刃','冰雪风暴','千旋冰轮破','冰凌破','千里冰封','极冰领域','永罪冰狱']
    关联技能2 = ['冰魄剑','寒冰连枪','冰魄旋枪','旋冰穿刺','冰魄锤击','极冰绽放','碎冰破']
    
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.16 + 0.02 * self.等级, 5)

    def 加成倍率2(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.24 + 0.03 * self.等级, 5)


class 刹那永恒技能18(刹那永恒主动技能):
    名称 = '碎冰破'
    所在等级 = 75
    等级上限 = 40
    等级精通 = 30
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 =[0 , 50585 , 55717 , 60848 , 65981 , 71112 , 76244 , 81376 , 86508 , 91640 , 96773 , 101904 , 107036 , 112168 , 117300 , 122431 , 127564 , 132695 , 137828 , 142960 , 148092 , 153223 , 158354 , 163487 , 168618 , 173750 , 178882 , 184015 , 189146 , 194279 , 199410 , 204542 , 209674 , 214806 , 219937 , 225070 , 230202 , 235334 , 240466 , 245598 , 250729]
    演出时间 = 1.0
    CD = 40.0

    def 等效百分比(self, 武器类型):
        return self.数据[self.等级]  * self.倍率

class 刹那永恒技能19(刹那永恒主动技能):
    名称 = '极冰领域'
    所在等级 = 80
    等级上限 = 40
    等级精通 = 30
    学习间隔 = 2
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 = [0 , 40711 , 44841 , 48971 , 53101 , 57231 , 61361 , 65491 , 69621 , 73751 , 77882 , 82012 , 86142 , 90272 , 94402 , 98532 , 102662 , 106792 , 110922 , 115053 , 119183 , 123313 , 127443 , 131573 , 135703 , 139833 , 143963 , 148093 , 152224 , 156354 , 160484 , 164614 , 168744 , 172874 , 177004 , 181134 , 185264 , 189395 , 193525 , 197655 , 201785]
    演出时间 = 0.65
    CD = 40.0

    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * self.倍率

class 刹那永恒技能20(刹那永恒主动技能):
    名称 = '永罪冰狱'
    所在等级 = 85
    等级上限 = 40
    等级精通 = 30
    学习间隔 = 5
    基础等级 = min(int((刹那永恒等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    数据 =[0 , 97663 , 120310 , 142957 , 165602 , 188249 , 210896 , 233545 , 256191 , 278838 , 301485 , 324131 , 346778 , 369427 , 392073 , 414720 , 437367 , 460013 , 482660 , 505309 , 527955 , 550602 , 573249 , 595895 , 618542 , 641191 , 663837 , 686484 , 709131 , 731777 , 754424 , 777073 , 799719 , 822366 , 845013 , 867659 , 890306 , 912955 , 935601 , 958248 , 980895]
    CD = 180.0

    def 等效百分比(self, 武器类型):
        return self.数据[self.等级] * self.倍率

class 刹那永恒技能21(被动技能):
    名称 = '卓越之力'
    所在等级 = 95
    等级上限 = 40
    基础等级 = 4

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.18 + 0.02 * self.等级, 5)

class 刹那永恒技能22(被动技能):
    名称 = '超卓之心'
    所在等级 = 95
    等级上限 = 11
    基础等级 = 1

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.045 + 0.005 * self.等级, 5)

class 刹那永恒技能23(被动技能):
    名称 = '觉醒之抉择'
    所在等级 = 100
    等级上限 = 40
    基础等级 = 2
    关联技能 = ['无']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.10 + 0.05 * self.等级, 5)

刹那永恒技能列表 = []
i = 0
while i >= 0:
    try:
        exec('刹那永恒技能列表.append(刹那永恒技能'+str(i)+'())')
        i += 1
    except:
        i = -1

刹那永恒技能序号 = dict()
for i in range(len(刹那永恒技能列表)):
    刹那永恒技能序号[刹那永恒技能列表[i].名称] = i

刹那永恒一觉序号 = 0
刹那永恒二觉序号 = 0
刹那永恒三觉序号 = 0
for i in 刹那永恒技能列表:
    if i.所在等级 == 50:
        刹那永恒一觉序号 = 刹那永恒技能序号[i.名称]
    if i.所在等级 == 85:
        刹那永恒二觉序号 = 刹那永恒技能序号[i.名称]
    if i.所在等级 == 100:
        刹那永恒三觉序号 = 刹那永恒技能序号[i.名称]

刹那永恒护石选项 = ['无']
for i in 刹那永恒技能列表:
    if i.是否有伤害 == 1 and i.是否有护石 == 1:
        刹那永恒护石选项.append(i.名称)

刹那永恒符文选项 = ['无']
for i in 刹那永恒技能列表:
    if i.所在等级 >= 20 and i.所在等级 <= 80 and i.所在等级 != 50 and i.是否有伤害 == 1:
        刹那永恒符文选项.append(i.名称)


class 刹那永恒角色属性(角色属性):

    职业名称 = '刹那永恒'

    武器选项 = ['魔杖','法杖']
    
    #'物理百分比','魔法百分比','物理固伤','魔法固伤'
    伤害类型选择 = ['魔法百分比']
    
    #默认
    伤害类型 = '魔法百力比'
    防具类型 = '皮甲'
    防具精通属性 = ['智力']

    主BUFF = 1.800
   
    #基础属性(含唤醒)
    基础力量 = 774.0
    基础智力 = 976.0
    
    #适用系统奶加成
    力量 = 基础力量
    智力 = 基础智力

    #人物基础 + 唤醒
    物理攻击力 = 65.0
    魔法攻击力 = 65.0
    独立攻击力 = 1045.0
    火属性强化 = 13
    冰属性强化 = 13
    光属性强化 = 13
    暗属性强化 = 13
    远古记忆 = 0
  
    def __init__(self):
        self.技能栏= deepcopy(刹那永恒技能列表)
        self.技能序号= deepcopy(刹那永恒技能序号)


    def 伤害指数计算(self):
        self.冰属性强化 += self.技能栏[self.技能序号['冰霜之径']].属强加成()
        super().伤害指数计算()
           
    def 冰属性强化加成(self):
        冰属性强化值 = 0
        for i in self.技能栏:
            if i.名称 != '冰霜之径':
              冰属性强化值 += 0
            else:
              冰属性强化值 += i.属强加成()
        return (冰属性强化值)

    def 装备属性计算(self):
        self.装备基础()

        for i in self.装备栏:
            装备列表[装备序号[i]].城镇属性(self)
            装备列表[装备序号[i]].进图属性(self)

        for i in self.套装栏:
            套装列表[套装序号[i]].城镇属性(self)
            套装列表[套装序号[i]].进图属性(self)

        for i in self.装备栏:
            if 装备列表[装备序号[i]].名称 == '奔流不息之伽蓝':
                if self.技能栏[self.技能序号['冰之技艺']].等级 != 0:
                    self.技能栏[self.技能序号['极冰绽放']].基础 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
                    self.技能栏[self.技能序号['极冰绽放']].成长 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
                    self.技能栏[self.技能序号['极冰绽放']].基础2 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
                    self.技能栏[self.技能序号['极冰绽放']].成长2 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
            if 装备列表[装备序号[i]].名称 == '奔流不息之山川':
                if self.技能栏[self.技能序号['冰之技艺']].等级 != 0:
                    self.技能栏[self.技能序号['冰魄锤击']].基础 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
                    self.技能栏[self.技能序号['冰魄锤击']].成长 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
                    self.技能栏[self.技能序号['旋冰穿刺']].基础 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
                    self.技能栏[self.技能序号['旋冰穿刺']].成长 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
            if 装备列表[装备序号[i]].名称 == '奔流不息之银河':
                if self.技能栏[self.技能序号['冰之技艺']].等级 != 0:
                    self.技能栏[self.技能序号['冰魄旋枪']].基础 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)
                    self.技能栏[self.技能序号['冰魄旋枪']].成长 *= (1 + 10 / 7 * (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24)) / (
                                (self.技能栏[self.技能序号['冰之技艺']].等级 * 0.03 + 0.24) + 1)


class 刹那永恒(角色窗口):
    def 窗口属性输入(self):
        self.初始属性 = 刹那永恒角色属性()
        self.角色属性A = 刹那永恒角色属性()
        self.角色属性B = 刹那永恒角色属性()
        self.一觉序号 = 刹那永恒一觉序号
        self.二觉序号 = 刹那永恒二觉序号
        self.三觉序号 = 刹那永恒三觉序号
        self.护石选项 = deepcopy(刹那永恒护石选项)
        self.符文选项 = deepcopy(刹那永恒符文选项)

    def 站街计算(self,装备名称,套装名称):
        C = deepcopy(self.角色属性A)
        C.技能栏 = deepcopy(self.角色属性A.技能栏)
        C.穿戴装备(装备名称,套装名称)
        for i in C.装备栏:
            装备列表[装备序号[i]].城镇属性(C)
        for i in C.套装栏:
            套装列表[套装序号[i]].城镇属性(C)
        C.装备基础()

        C.冰属性强化 += C.冰属性强化加成()
        
        return C

    def 输入属性(self, 属性, x = 0):
        super().输入属性(属性)
        if 属性.技能栏[self.角色属性A.技能序号['水晶剑']].等级 != 0:
           属性.技能栏[self.角色属性A.技能序号['冰魄剑']].技能形态改变()