from PublicReference.base import *

class 月影星劫主动技能(主动技能):
    def 等效CD(self, 武器类型):
        if 武器类型 == '匕首':
            return round(self.CD / self.恢复  * 0.9, 1)
        if 武器类型 == '双剑':
            return round(self.CD / self.恢复  * 1.1, 1)

class 月影星劫技能0(月影星劫主动技能):
    名称 = '终结追击'
    所在等级 = 15
    等级上限 = 30
    基础等级 = 20
    是否有伤害 = 0
    def 终结追击倍率(self):
        if self.等级 == 0:
            return 0.0
        else:
            return round(0.79 + 0.02 * self.等级, 5)

class 月影星劫技能1(被动技能):
    名称 = '匕首精通'
    所在等级 = 20
    等级上限 = 30
    基础等级 = 20
    def 加成倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '匕首':
            return 1.0
        elif self.等级 <= 20:
            return round(1.019 + 0.017 * self.等级, 5)
        else:
            return round(1.359 + 0.028 * (self.等级 - 20), 5)

    def 物理攻击力倍率(self, 武器类型):
        return self.加成倍率(武器类型)

    冷却关联技能 = ['所有']

    def CD缩减倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '匕首':
            return 1.0
        else:
            return round(1 - 0.0133 - 0.002684 * self.等级, 5)

class 月影星劫技能2(被动技能):
    名称 = '双剑精通'
    所在等级 = 20
    等级上限 = 30
    基础等级 = 20
    def 加成倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '双剑':
            return 1.0
        elif self.等级 <= 20:
            return round(1.019 + 0.017 * self.等级, 5)
        else:
            return round(1.359 + 0.028 * (self.等级 - 20), 5)

    def 物理攻击力倍率(self, 武器类型):
        return self.加成倍率(武器类型)

    def 终结追击倍率(self):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1 + 0.2079 + 0.0121 * self.等级, 5)

class 月影星劫技能3(被动技能):
    名称 = '月弧'
    所在等级 = 48
    等级上限 = 40
    基础等级 = 20
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.095 + 0.02 * self.等级, 5)

class 月影星劫技能4(被动技能):
    名称 = '极限追击'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 11
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.08 + 0.02 * self.等级, 5)
    def 物理攻击力倍率进图(self, 武器类型):
        return self.加成倍率(武器类型)

class 月影星劫技能5(月影星劫主动技能):
    名称 = '双刃穿刺'
    所在等级 = 20
    等级上限 = 60
    基础等级 = 43
    基础 = 1863.5
    成长 = 210.45
    基础2 = 371.9
    成长2 = 42.1
    攻击次数2 = 1
    TP成长 = 0.1
    TP上限 = 5
    CD = 7.0

class 月影星劫技能6(月影星劫主动技能):
    名称 = '绝杀斩'
    所在等级 = 20
    等级上限 = 60
    基础等级 = 43
    基础 = 1723.3
    成长 = 194.67
    基础2 = 346.1
    成长2 = 38.88
    攻击次数2 = 1
    TP成长 = 0.1
    TP上限 = 5
    CD = 7.0

class 月影星劫技能7(月影星劫主动技能):
    名称 = '旋舞斩'
    所在等级 = 20
    等级上限 = 60
    基础等级 = 43
    基础 = 1634.4
    成长 = 184.6
    基础2 = 327.1
    成长2 = 36.9
    攻击次数2 = 1
    TP成长 = 0.1
    TP上限 = 5
    CD = 7.0

class 月影星劫技能8(月影星劫主动技能):
    名称 = '旋刃'
    所在等级 = 25
    等级上限 = 60
    基础等级 = 41
    基础 = 2371.5
    成长 = 268.5
    基础2 = 474.3
    成长2 = 53.7
    攻击次数2 = 1
    TP成长 = 0.1
    TP上限 = 5
    CD = 8.0

class 月影星劫技能9(月影星劫主动技能):
    名称 = '剑刃风暴'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 38
    基础 = 3836.5
    成长 = 433.5
    基础2 = 768.2
    成长2 = 86.76
    攻击次数2 = 1
    CD = 12.0
    TP成长 = 0.1
    TP上限 = 5

class 月影星劫技能10(月影星劫主动技能):
    名称 = '螺旋穿刺'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 36
    #转满
    基础 = 5437.3
    成长 = 615.7
    #秒Z
    基础3 = 2333.5
    成长3 = 263.75
    #收招
    基础2 = 1090
    成长2 = 123.03
    攻击次数2 = 1
    CD = 15.0
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.攻击次数 *= 1.5

class 月影星劫技能11(月影星劫主动技能):
    名称 = '雷光刃影'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 36
    基础 = 6834.8
    成长 = 772.17
    基础2 = 1366.6
    成长2 = 154.43
    攻击次数2 = 1
    CD = 15.0
    TP成长 = 0.1
    TP上限 = 5

class 月影星劫技能12(月影星劫主动技能):
    名称 = '疾风乱舞'
    所在等级 = 40
    等级上限 = 60
    基础等级 = 33
    基础 = 9855.2
    成长 = 1113.8
    基础2 = 1973.3
    成长2 = 222.69
    攻击次数2 = 1
    CD = 25.0
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.攻击次数 *= 1.261
        self.攻击次数2 *= 1.08
        self.CD *= 0.9

class 月影星劫技能13(月影星劫主动技能):
    名称 = '绝命瞬狱杀'
    所在等级 = 45
    等级上限 = 60
    基础等级 = 31
    基础 = 10048.3
    成长 = 1134.73
    基础2 = 2010.1
    成长2 = 226.93
    攻击次数2 = 1
    CD = 45.0
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.攻击次数2 *= 1.4805


class 月影星劫技能14(月影星劫主动技能):
    名称 = '月轮舞'
    所在等级 = 50
    等级上限 = 40
    基础等级 = 12
    基础 = 40326
    成长 = 12177
    CD = 145

class 月影星劫技能15(月影星劫主动技能):
    名称 = '旋刃冲击'
    所在等级 = 60
    等级上限 = 40
    基础等级 = 23
    基础 = 15151.7
    成长 = 1033.32
    基础2 = 2089.1
    成长2 = 235.91
    攻击次数2 = 1
    CD = 30.0
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.攻击次数 *= 1.201
        self.基础2 *= 0.2
        self.成长2 *= 0.2
        self.基础2 += 0.857 * self.基础
        self.成长2 += 0.857 * self.成长
        self.CD *= 0.89

class 月影星劫技能16(月影星劫主动技能):
    名称 = '陨落螺旋刺'
    所在等级 = 70
    等级上限 = 40
    基础等级 = 18
    基础 = 17883.5
    成长 = 2019.47
    基础2 = 3577.2
    成长2 = 403.82
    攻击次数2 = 1
    CD = 50.0
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.攻击次数 *= 1.616

class 月影星劫技能17(月影星劫主动技能):
    名称 = '乱空杀'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 11
    基础 = 19200
    成长 = 3643
    基础2 = 3840.4
    成长2 = 728.6
    攻击次数2 = 1
    CD = 30.0

class 月影星劫技能18(月影星劫主动技能):
    名称 = '月影突袭'
    所在等级 = 80
    等级上限 = 40
    基础等级 = 13
    基础 = 30010.8	
    成长 = 3389.17	
    基础2 = 6003.1	
    成长2 = 677.92
    攻击次数2 = 1
    CD = 50.0

class 月影星劫技能19(月影星劫主动技能):
    名称 = '天渊星狱'
    所在等级 = 85
    等级上限 = 40
    基础等级 = 5
    基础 = 75395	
    成长 = 13419	
    基础2 = 10924.5	
    成长2 = 3297.5
    攻击次数2 = 1
    CD = 180

class 月影星劫技能20(被动技能):
    名称 = '死亡风暴'
    所在等级 = 40
    等级上限 = 60
    基础等级 = 22
    关联技能 = ['无']

    def 额外百分比(self):
        if self.等级 == 0:
            return 0.0
        else:
            return 9748.4 + 1130.53 * self.等级

class 月影星劫技能21(被动技能):
    名称 = '卓越之力'
    所在等级 = 95
    等级上限 = 40
    基础等级 = 4

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.18 + 0.02 * self.等级, 5)

class 月影星劫技能22(被动技能):
    名称 = '超卓之心'
    所在等级 = 95
    等级上限 = 11
    基础等级 = 1

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.045 + 0.005 * self.等级, 5)

class 月影星劫技能23(被动技能):
    名称 = '觉醒之抉择'
    所在等级 = 100
    等级上限 = 40
    基础等级 = 2
    关联技能 = ['无']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.10 + 0.05 * self.等级, 5)


月影星劫技能列表 = []
i = 0
while i >= 0:
    try:
        exec('月影星劫技能列表.append(月影星劫技能'+str(i)+'())')
        i += 1
    except:
        i = -1

月影星劫技能序号 = dict()
for i in range(len(月影星劫技能列表)):
    月影星劫技能序号[月影星劫技能列表[i].名称] = i

月影星劫一觉序号 = 0
月影星劫二觉序号 = 0
月影星劫三觉序号 = 0
for i in 月影星劫技能列表:
    if i.所在等级 == 50:
        月影星劫一觉序号 = 月影星劫技能序号[i.名称]
    if i.所在等级 == 85:
        月影星劫二觉序号 = 月影星劫技能序号[i.名称]
    if i.所在等级 == 100:
        月影星劫三觉序号 = 月影星劫技能序号[i.名称]

月影星劫护石选项 = ['无']
for i in 月影星劫技能列表:
    if i.是否有伤害 == 1 and i.是否有护石 == 1:
        月影星劫护石选项.append(i.名称)

月影星劫符文选项 = ['无']
for i in 月影星劫技能列表:
    if i.所在等级 >= 20 and i.所在等级 <= 80 and i.所在等级 != 50 and i.是否有伤害 == 1:
        月影星劫符文选项.append(i.名称)

class 月影星劫角色属性(角色属性):

    职业名称 = '月影星劫'

    武器选项 = ['匕首', '双剑']
    
    #'物理百分比','魔法百分比','物理固伤','魔法固伤'
    伤害类型选择 = ['物理百分比']
    
    #默认
    伤害类型 = '物理百分比'
    防具类型 = '皮甲'
    防具精通属性 = ['力量']

    主BUFF = 1.77
   
    #基础属性(含唤醒)
    基础力量 = 952.0
    基础智力 = 857.0
    
    #适用系统奶加成
    力量 = 基础力量
    智力 = 基础智力

    #人物基础 + 唤醒
    物理攻击力 = 65.0
    魔法攻击力 = 65.0
    独立攻击力 = 1045.0
    火属性强化 = 13
    冰属性强化 = 13
    光属性强化 = 13
    暗属性强化 = 13
  
    def __init__(self):
        self.技能栏= deepcopy(月影星劫技能列表)
        self.技能序号= deepcopy(月影星劫技能序号)

    def 被动倍率计算(self):
        super().被动倍率计算()
        for i in self.技能栏:
            if i.是否有伤害 == 1:
                i.攻击次数2 *= self.技能栏[0].终结追击倍率()

        if self.武器类型 == '双剑':
            self.技能栏[1].关联技能 = ['无']
            for i in self.技能栏:
                if i.是否有伤害 == 1:
                    i.攻击次数2 *= self.技能栏[2].终结追击倍率() * 3.25
        elif self.武器类型 == '匕首':
            self.技能栏[2].关联技能 = ['无']
            for i in self.技能栏:
                if i.是否有伤害 == 1:
                    i.攻击次数2 *= 4.25

    def 面板物理攻击力(self):
        面板物理攻击 = (self.物理攻击力 + self.进图物理攻击力) * (1 + self.百分比三攻) * (1 + self.年宠技能 * 0.10 + self.斗神之吼秘药 * 0.12 + self.白兔子技能 * 0.20)
        for i in self.技能栏:
            try : 
                面板物理攻击 *= i.物理攻击力倍率(self.武器类型)
            except : 
                pass
            try : 
                面板物理攻击 *= i.物理攻击力倍率进图(self.武器类型)
            except : 
                pass
        return round(面板物理攻击,8) * (self.面板力量() / 250 + 1)

    def 伤害计算(self, x = 0):
        
        self.所有属性强化(self.进图属强)
        # Will添加
        self.CD倍率计算()
        self.加算冷却计算()

        self.被动倍率计算()
        self.伤害指数计算()

        技能释放次数=[]
        技能单次伤害=[]
        技能总伤害=[]
    
        #技能单次伤害计算
        for i in self.技能栏:
            if i.是否有伤害==1:
                技能单次伤害.append(i.等效百分比(self.武器类型)*self.伤害指数*i.被动倍率)
            else:
                技能单次伤害.append(0)
      
        #技能释放次数计算
        for i in self.技能栏:
            if i.是否有伤害==1:
                if self.次数输入[self.技能序号[i.名称]] =='/CD':
                    技能释放次数.append(int((self.时间输入 - i.演出时间)/i.等效CD(self.武器类型) + 1 +i.基础释放次数))
                elif self.次数输入[self.技能序号[i.名称]] != '0':
                    技能释放次数.append(int(self.次数输入[self.技能序号[i.名称]]))
                else:
                    技能释放次数.append(0)
            else:
                技能释放次数.append(0)
    
        #单技能伤害合计
    
        for i in self.技能栏:
            if i.是否有伤害==1 and 技能释放次数[self.技能序号[i.名称]] != 0:
                技能总伤害.append(技能单次伤害[self.技能序号[i.名称]]*技能释放次数[self.技能序号[i.名称]]*(1+self.白兔子技能*0.20+self.年宠技能*0.10*self.宠物次数[self.技能序号[i.名称]]/技能释放次数[self.技能序号[i.名称]]+self.斗神之吼秘药*0.12))
            else:
                技能总伤害.append(0)

        #死亡风暴伤害
        if 技能总伤害[self.技能序号['剑刃风暴']] != 0:
            技能释放次数[self.技能序号['死亡风暴']] = 1
            技能总伤害[self.技能序号['死亡风暴']] = 技能总伤害[self.技能序号['剑刃风暴']] * self.技能栏[self.技能序号['死亡风暴']].额外百分比() / self.技能栏[self.技能序号['剑刃风暴']].等效百分比(self.武器类型)

        总伤害=0
        for i in self.技能栏:
            总伤害+=技能总伤害[self.技能序号[i.名称]]
        
        if x==0:
            return 总伤害
    
        if x==1:
            详细数据=[]
            for i in range(0,len(self.技能栏)):
                详细数据.append(技能释放次数[i])
                详细数据.append(技能总伤害[i])
                if 技能释放次数[i]!=0:
                    详细数据.append(技能总伤害[i]/技能释放次数[i])
                else:
                    详细数据.append(0)
                if 总伤害!=0:
                    详细数据.append(技能总伤害[i]/总伤害*100)
                else:
                    详细数据.append(0)
            return 详细数据

class 月影星劫(角色窗口):
    def 窗口属性输入(self):
        self.初始属性 = 月影星劫角色属性()
        self.角色属性A = 月影星劫角色属性()
        self.角色属性B = 月影星劫角色属性()
        self.一觉序号 = 月影星劫一觉序号
        self.二觉序号 = 月影星劫二觉序号
        self.三觉序号 = 月影星劫三觉序号
        self.护石选项 = deepcopy(月影星劫护石选项)
        self.符文选项 = deepcopy(月影星劫符文选项)

    def 界面(self):
        super().界面()
        self.收招选择 = []
        count = 0
        for i in self.初始属性.技能栏:
            if i.是否有伤害 == 1:
                if i.攻击次数2 != 0:
                    self.收招选择.append(QCheckBox(i.名称 + '-收招',self.main_frame2))
                    self.收招选择[count].resize(120,20)
                    self.收招选择[count].move(325 + 135 * int(count / 7),440 + 26 * (count % 7))
                    self.收招选择[count].setStyleSheet(复选框样式)
                    if i.名称 not in ['旋刃冲击']:
                        self.收招选择[count].setChecked(True)
                    count += 1

        self.螺旋穿刺 = QCheckBox('螺旋穿刺秒Z', self.main_frame2)
        self.螺旋穿刺.resize(100,20)
        self.螺旋穿刺.move(125, 520)
        self.螺旋穿刺.setStyleSheet(复选框样式)
        self.螺旋穿刺.setChecked(True)

    def 输入属性(self, 属性, x = 0):
        super().输入属性(属性)
        count = 0
        for i in 属性.技能栏:
            if i.是否有伤害 == 1:
                if i.攻击次数2 != 0:
                    if not self.收招选择[count].isChecked():
                        i.攻击次数2 = 0
                    count += 1
        if self.螺旋穿刺.isChecked():
            属性.技能栏[属性.技能序号['螺旋穿刺']].攻击次数 = 0
            属性.技能栏[属性.技能序号['螺旋穿刺']].攻击次数3 = 1
        
        #刺客符文收招额外加成
        for i in range(0,6):
            if self.符文[i].currentText()!='无' and self.符文效果[i].currentText() != '无':
                for j in self.符文效果[i].currentText().split(','):
                    if '攻击' in j:
                        属性.技能栏[self.角色属性A.技能序号[self.符文[i].currentText()]].攻击次数2 *= 1 + int(j.replace('攻击','').replace('%',''))/100





