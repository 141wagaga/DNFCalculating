from PublicReference.base import *


class 极武圣技能0(主动技能):
    名称 = '崩拳'
    所在等级 = 15
    等级上限 = 60
    基础等级 = 46
    基础 = 2485.356
    成长 = 280.644
    CD = 6.0
    TP成长 = 0.1
    TP上限 = 5


class 极武圣技能1(主动技能):
    名称 = '铁山靠'
    所在等级 = 25
    等级上限 = 60
    基础等级 = 41
    基础 = 3569.925
    成长 = 403.075
    CD = 7.0
    TP成长 = 0.10
    TP上限 = 5


class 极武圣技能2(主动技能):
    名称 = '碎骨'
    所在等级 = 25
    等级上限 = 60
    基础等级 = 41
    基础 = 3654.35
    成长 = 412.65
    CD = 7.0
    TP成长 = 0.1
    TP上限 = 5


class 极武圣技能3(被动技能):
    名称 = '柔化肌肉'
    所在等级 = 30
    等级上限 = 15
    基础等级 = 5

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        return round(1.125 + 0.015 * self.等级, 5)

class 极武圣技能4(被动技能):
    名称 = '弱点感知'
    所在等级 = 30
    等级上限 = 20
    基础等级 = 10

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            if self.等级<=10:
                return round(1.01 + 0.01 * self.等级, 5)
            else :
                return round(1.11 + 0.02 * (self.等级-10), 5)

class 极武圣技能5(主动技能):
    名称 = '寸拳'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 36
    基础 = 8153.429
    成长 = 920.572
    CD = 15
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1

    def 装备护石(self):
        self.基础 *= 1.24
        self.成长 *= 1.24

class 极武圣技能6(主动技能):
    名称 = '升龙拳'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 36
    基础 = 1762.0286
    成长 = 198.9714
    攻击次数=4
    基础2=1526.6286
    成长2=172.3714
    攻击次数2=1
    CD = 20
    TP成长 = 0.1
    TP上限 = 5


class 极武圣技能7(主动技能):
    名称 = '闪电之舞'
    所在等级 = 40
    等级上限 = 60
    基础等级 = 33
    基础 = 1903.96875
    成长 = 215.03125
    攻击次数=7
    CD = 20
    TP成长 = 0.1
    TP上限 = 5
    演出时间=1
    是否有护石 = 1

    def 装备护石(self):
        self.攻击次数 = 9
        self.基础 *= 0.92
        self.成长 *= 0.92
        self.CD *=0.85


class 极武圣技能8(主动技能):
    名称 = '纷影连环踢'
    所在等级 = 45
    等级上限 = 60
    基础等级 = 31
    基础 = 526.5
    成长 = 59.5
    攻击次数=10
    基础2=11692
    成长2=1320.166666
    攻击次数2=1 
    CD = 40.0
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1

    def 装备护石(self):
        self.攻击次数 = 20
        self.基础2 *= 0.87
        self.成长2 *= 0.87

class 极武圣技能9(主动技能):
    名称 = '武神强踢'
    所在等级 = 50
    等级上限 = 40
    基础等级 = 12
    基础 = 37261*1.1
    成长 = 11248.5*1.1
    CD = 145.0



class 极武圣技能10(被动技能):
    名称 = '武神步'
    所在等级 = 48
    等级上限 = 40
    基础等级 = 20
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        return round(1.05 + 0.02 * self.等级, 5)


class 极武圣技能11(主动技能):
    名称 = '破碎拳'
    所在等级 = 60
    等级上限 = 40
    基础等级 = 23
    基础 = 18861.4546
    成长 = 2129.5454
    CD = 30
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1

    def 装备护石(self):
        self.基础 *= 1.19
        self.成长 *= 1.19


class 极武圣技能12(主动技能):
    名称 = '回天连环击'
    所在等级 = 70
    等级上限 = 40
    基础等级 = 18
    基础 = 2855.53
    成长 =322.470
    攻击次数=1
    基础2=26260.765
    成长2=2965.234
    攻击次数2=1
    CD = 50
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1

    def 装备护石(self):
        self.基础 *= 0
        self.成长*=0
        self.基础2 *= 1.34
        self.成长2 *= 1.34


class 极武圣技能13(被动技能):
    名称 = '神武之力'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 11

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        return round(1.22 + 0.02 * self.等级, 5)


class 极武圣技能14(主动技能):
    名称 = '虎啸神拳'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 16
    基础 = 1581.4
    成长 =178.6
    攻击次数=15
    基础2 = 15453.2
    成长2 =1744.8
    攻击次数2=1
    基础3=4083.8667
    成长3=461.1333
    攻击次数3=1
    CD = 40.0


class 极武圣技能15(主动技能):
    名称 = '无影脚'
    所在等级 = 80
    等级上限 = 40
    基础等级 = 13
    基础=49364.5844
    成长=5573.4156
    CD = 45.0

class 极武圣技能16(主动技能):
    名称 = '极尽霸皇断空拳'
    所在等级 = 85
    等级上限 = 40
    基础等级 = 5
    基础 =87153.5
    成长 =26310.5
    CD = 180.0

class 极武圣技能17(被动技能):
    名称 = '卓越之力'
    所在等级 = 95
    等级上限 = 40
    基础等级 = 4

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.18 + 0.02 * self.等级, 5)

class 极武圣技能18(被动技能):
    名称 = '超卓之心'
    所在等级 = 95
    等级上限 = 11
    基础等级 = 1

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.045 + 0.005 * self.等级, 5)

class 极武圣技能19(被动技能):
    名称 = '觉醒之抉择'
    所在等级 = 100
    等级上限 = 40
    基础等级 = 2
    关联技能 = ['无']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.10 + 0.05 * self.等级, 5)

#CDR: 拳套精通(10%) 
#不包含觉醒
class 极武圣技能20(被动技能):
    名称 = '拳套精通'
    所在等级 = 15
    等级上限 = 10
    基础等级 = 10
    #拳套精通cd
    冷却关联技能 = ['崩拳','铁山靠','碎骨','寸拳','升龙拳','闪电之舞','纷影连环踢','破碎拳','回天连环击','虎啸神拳','无影脚']
    def 加成倍率(self, 武器类型):
        return 1.0
    def CD缩减倍率(self, 武器类型):
        if 武器类型 == '拳套':
            if self.等级==0:
                return 1.0
            else :
                return (1-0.01*self.等级)
        else:
            return 1.0
    #拳套自带全技能10cd
    冷却关联技能2 = ['崩拳','铁山靠','碎骨','寸拳','升龙拳','闪电之舞','纷影连环踢','破碎拳','回天连环击','虎啸神拳','无影脚','武神强踢','极尽霸皇断空拳']
    def 加成倍率2(self, 武器类型):
        return 1.0
    def CD缩减倍率2(self, 武器类型):
        if 武器类型 == '拳套':
            return 0.9
        else:
            return 1.0


#CDR 一觉cdr buff
class 极武圣技能21(被动技能):
    名称='武神强踢buff'
    所在等级 = 1
    等级上限 = 1
    基础等级 = 1
    冷却关联技能 = ['崩拳','铁山靠','碎骨','寸拳','升龙拳','闪电之舞','纷影连环踢','破碎拳','回天连环击','虎啸神拳','无影脚','武神强踢','极尽霸皇断空拳']
    def 加成倍率(self, 武器类型):
        return 1.0
    def CD缩减倍率(self, 武器类型):
        if self.等级==0:
            return 1.0
        else :
            return 0.9

极武圣技能列表 = []
i = 0
while i >= 0:
    try:
        exec('极武圣技能列表.append(极武圣技能' + str(i) + '())')
        i += 1
    except:
        i = -1

极武圣技能序号 = dict()
for i in range(len(极武圣技能列表)):
    极武圣技能序号[极武圣技能列表[i].名称] = i

极武圣一觉序号 = 0
极武圣二觉序号 = 0
极武圣三觉序号 = 0
for i in 极武圣技能列表:
    if i.所在等级 == 50:
        极武圣一觉序号 = 极武圣技能序号[i.名称]
    if i.所在等级 == 85:
        极武圣二觉序号 = 极武圣技能序号[i.名称]
    if i.所在等级 == 100:
        极武圣三觉序号 = 极武圣技能序号[i.名称]

极武圣护石选项 = [
 '无']
for i in 极武圣技能列表:
    if i.是否有伤害 == 1 and i.是否有护石 == 1:
        极武圣护石选项.append(i.名称)

极武圣符文选项 = [
 '无']
for i in 极武圣技能列表:
    if i.所在等级 >= 20 and i.所在等级 <= 80 and i.所在等级 != 50 and i.是否有伤害 == 1:
        极武圣符文选项.append(i.名称)

class 极武圣角色属性(角色属性):
    职业名称 = '极武圣'
    武器选项 = ['拳套']
    伤害类型选择 = [
     '物理百分比']
    伤害类型 = '物理百分比'
    防具类型 = '轻甲'
    防具精通属性 = ['力量']
    主BUFF = 2.13
    基础力量 = 969.0
    基础智力 = 782.0
    力量 = 基础力量
    智力 = 基础智力
    物理攻击力 = 65.0
    魔法攻击力 = 65.0
    独立攻击力 = 1045.0
    火属性强化 = 13
    冰属性强化 = 13
    光属性强化 = 13
    暗属性强化 = 13

    def __init__(self):
        self.技能栏 = deepcopy(极武圣技能列表)
        self.技能序号 = deepcopy(极武圣技能序号)

    def 伤害计算(self, x = 0):
        self.所有属性强化(self.进图属强)
        # Will添加
        self.CD倍率计算()
        self.加算冷却计算()

        self.被动倍率计算()
        self.伤害指数计算()

        技能释放次数=[]
        技能单次伤害=[]
        技能总伤害=[]

    
        #技能单次伤害计算
        for i in self.技能栏:
            if i.是否有伤害 == 1:
                技能单次伤害.append(i.等效百分比(self.武器类型)*self.伤害指数*i.被动倍率)
            else:
                技能单次伤害.append(0)
      
        #技能释放次数计算
        for i in self.技能栏:
            if i.是否有伤害==1:
                if self.次数输入[self.技能序号[i.名称]] =='/CD':
                    技能释放次数.append(int((self.时间输入-i.演出时间)/i.等效CD(self.武器类型) + 1 +i.基础释放次数))
                else:
                    技能释放次数.append(int(self.次数输入[self.技能序号[i.名称]]))
            else:
                技能释放次数.append(0)
    
        #单技能伤害合计
    
        for i in self.技能栏:
            if i.是否有伤害==1 and 技能释放次数[self.技能序号[i.名称]] != 0:
                技能总伤害.append(技能单次伤害[self.技能序号[i.名称]]*技能释放次数[self.技能序号[i.名称]]*(1+self.白兔子技能*0.20+self.年宠技能*0.10*self.宠物次数[self.技能序号[i.名称]]/技能释放次数[self.技能序号[i.名称]]+self.斗神之吼秘药*0.12))
            else:
                技能总伤害.append(0)

        总伤害=0
        for i in self.技能栏:
            总伤害 += 技能总伤害[self.技能序号[i.名称]]
        if x==0:
            return 总伤害
    
        if x==1:
            详细数据=[]
            for i in range(0,len(self.技能栏)):
                详细数据.append(技能释放次数[i])
                详细数据.append(技能总伤害[i])
                if 技能释放次数[i]!=0:
                    详细数据.append(技能总伤害[i]/技能释放次数[i])
                else:
                    详细数据.append(0)
                if 总伤害!=0:
                    详细数据.append(技能总伤害[i]/总伤害*100)
                else:
                    详细数据.append(0)
            return 详细数据

class 极武圣(角色窗口):

    def 窗口属性输入(self):
        self.初始属性 = 极武圣角色属性()
        self.角色属性A = 极武圣角色属性()
        self.角色属性B = 极武圣角色属性()
        self.一觉序号 = 极武圣一觉序号
        self.二觉序号 = 极武圣二觉序号
        self.三觉序号 = 极武圣三觉序号
        self.护石选项 = deepcopy(极武圣护石选项)
        self.符文选项 = deepcopy(极武圣符文选项)



