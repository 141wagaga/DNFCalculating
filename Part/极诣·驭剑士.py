from PublicReference.base import *

class 极诣·驭剑士主动技能(主动技能):
    def 等效CD(self, 武器类型):
        if 武器类型 == '巨剑':
            return round(self.CD / self.恢复 * 1.1, 1)
        if 武器类型 == '太刀':
            return round(self.CD / self.恢复 * 0.95, 1)
        if 武器类型 == '钝器':
            return round(self.CD / self.恢复 * 1.05, 1)
        if 武器类型 == '短剑':
            return round(self.CD / self.恢复 * 1.0, 1)

class 极诣·驭剑士技能0(被动技能):
    名称 = '基础精通'
    倍率 = 1.0
    所在等级 = 1
    等级上限 = 200
    基础等级 = 100
    关联技能 = ['帝国剑术']
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(self.倍率 * (0.463 + 0.089 * self.等级), 5)

class 极诣·驭剑士技能1(极诣·驭剑士主动技能):
    名称 = '帝国剑术'
    备注 = '(TP为基础精通)'
    所在等级 = 15
    等级上限 = 1
    基础等级 = 1
    基础 = {'巨剑':180 + 206 + 128, '太刀':123 + 171 + 196, '短剑':(70 + 75 + 82 + 87) * 2, '钝器':103 + 154 + 180 + 78}
    成长 = 0
    CD = 1.0
    TP成长 = 0.10
    TP上限 = 3
    def 等效百分比(self, 武器类型):
        if self.等级 == 0:
            return 0
        else:
            return self.基础[武器类型]

class 极诣·驭剑士技能2(被动技能):
    名称 = '毁灭之巨剑精通'
    所在等级 = 15
    等级上限 = 40
    基础等级 = 30
    关联技能2 = ['所有']
    def 加成倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '巨剑':
            return 1.0
        else:
            return round(1 + (15.6 + 0.6 * self.等级)/100, 5)
    #已测试 只是不显示小数，伤害计算会包含小数
            
    def 加成倍率2(self, 武器类型):
        return self.物理攻击力倍率(武器类型)

    def 物理攻击力倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '巨剑':
            return 1.0
        if self.等级 <= 30:
            return round(1.01 + 0.01 * self.等级, 5)
        else:
            return round(0.71 + 0.02 * self.等级, 5)

class 极诣·驭剑士技能3(被动技能):
    名称 = '波动之钝器精通'
    所在等级 = 15
    等级上限 = 40
    基础等级 = 30
    关联技能2 = ['所有']
    def 加成倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '钝器':
            return 1.0
        else:
            return round(1 + (18 + 0.5 * self.等级)/100, 5)
    #已测试 只是不显示小数，伤害计算会包含小数
            
    def 加成倍率2(self, 武器类型):
        return self.物理攻击力倍率(武器类型)

    def 物理攻击力倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '钝器':
            return 1.0
        if self.等级 <= 30:
            return round(1.01 + 0.01 * self.等级, 5)
        else:
            return round(0.71 + 0.02 * self.等级, 5)

class 极诣·驭剑士技能4(被动技能):
    名称 = '血影之太刀精通'
    所在等级 = 15
    等级上限 = 40
    基础等级 = 30
    关联技能2 = ['所有']
    def 加成倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '太刀':
            return 1.0
        else:
            return round(1 + (17.5 + 0.5 * self.等级)/100, 5)
    #已测试 只是不显示小数，伤害计算会包含小数
            
    def 加成倍率2(self, 武器类型):
        return self.物理攻击力倍率(武器类型)

    def 物理攻击力倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '太刀':
            return 1.0
        if self.等级 <= 30:
            return round(1.01 + 0.01 * self.等级, 5)
        else:
            return round(0.71 + 0.02 * self.等级, 5)
    冷却关联技能 = ['所有']
    def CD缩减倍率(self, 武器类型):
        if self.等级==0 or 武器类型 != '太刀':
            return 1.0
        else :
            return 0.9

class 极诣·驭剑士技能5(被动技能):
    名称 = '魔性之短剑精通'
    所在等级 = 15
    等级上限 = 40
    基础等级 = 30
    关联技能2 = ['所有']
    def 加成倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '短剑':
            return 1.0
        else:
            return round(1 + (17 + 0.5 * self.等级)/100, 5)
    #已测试 只是不显示小数，伤害计算会包含小数
            
    def 加成倍率2(self, 武器类型):
        return self.物理攻击力倍率(武器类型)

    def 物理攻击力倍率(self, 武器类型):
        if self.等级 == 0 or 武器类型 != '短剑':
            return 1.0
        if self.等级 <= 30:
            return round(1.02 + 0.01 * self.等级, 5)
        else:
            return round(0.72 + 0.02 * self.等级, 5) 
    CD倍率 = [0, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 55, 56, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 72, 74, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 89]        
    
    def 奥义CD倍率(self):
        return 1 - self.CD倍率[self.等级] / 100

class 极诣·驭剑士技能6(极诣·驭剑士主动技能):
    名称 = '魔剑降临'
    所在等级 = 15
    等级上限 = 60
    基础等级 = 46
    #火冰
    基础 = 75.51
    成长 = 8.49
    攻击次数 = 1
    #光
    基础2 = 21.57
    成长2 = 2.43
    攻击次数2 = 0
    #暗
    基础3 = 49.37
    成长3 = 5.63
    攻击次数3 = 0
    CD = 1.0
    TP成长 = 0.1
    TP上限 = 5

class 极诣·驭剑士技能7(极诣·驭剑士主动技能):
    名称 = '疾影斩'
    所在等级 = 20
    等级上限 = 60
    基础等级 = 43
    基础 = 2363.21
    成长 = 266.79
    CD = 7.0
    TP成长 = 0.10
    TP上限 = 5

class 极诣·驭剑士技能8(极诣·驭剑士主动技能):
    名称 = '幻剑术'
    所在等级 = 25
    等级上限 = 60
    基础等级 = 41
    基础 = 3417.6
    成长 = 386.4
    #钝器额外
    基础2 = 851.4
    成长2 = 96.6
    CD = 8.0
    TP成长 = 0.10
    TP上限 = 5

class 极诣·驭剑士技能9(极诣·驭剑士主动技能):
    名称 = '升龙剑'
    所在等级 = 25
    等级上限 = 60
    基础等级 = 41
    基础 = 3663.78
    成长 = 414.23
    CD = 8.0
    TP成长 = 0.10
    TP上限 = 5

class 极诣·驭剑士技能10(被动技能):
    名称 = '魔剑觉醒'
    所在等级 = 30
    等级上限 = 15
    基础等级 = 5
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.035 + 0.015 * self.等级, 5)

class 极诣·驭剑士技能11(极诣·驭剑士主动技能):
    名称 = '穿云破空剑'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 26
    基础 = 4069.24
    成长 = 772.76
    攻击次数 = 1
    #冲击波(不可抓取无伤害)
    基础2 = 503.48
    成长2 = 95.52
    攻击次数2 = 0
    CD = 12.0
    TP成长 = 0.10
    TP上限 = 5

class 极诣·驭剑士技能12(极诣·驭剑士主动技能):
    名称 = '魔剑奥义'
    所在等级 = 30
    等级上限 = 60
    基础等级 = 38
    是否主动 = 0
    #光冰
    基础 = 736.87
    成长 = 83.13
    攻击次数 = 1
    #暗火
    基础2 = 669.41
    成长2 = 75.59
    攻击次数2 = 0
    TP上限 = 5
    短精CD = 1
    def 等效CD(self, 武器类型):
        if 武器类型 != '短剑':
            return round(5 * (1 - 0.1 * self.TP等级), 1)
        else:
            return round(self.短精CD * 5 * (1 - 0.1 * self.TP等级), 2)

class 极诣·驭剑士技能13(极诣·驭剑士主动技能):
    名称 = '破军旋舞斩'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 24
    基础 = 5555.22 * 1.2
    成长 = 1053.78 * 1.2
    CD = 15.0
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.基础 *= 1.24
        self.成长 *= 1.24

class 极诣·驭剑士技能14(极诣·驭剑士主动技能):
    名称 = '瞬影三绝斩'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 36
    基础 = 5922.08
    成长 = 668.93
    CD = 15.0
    TP成长 = 0.10
    TP上限 = 5

class 极诣·驭剑士技能15(极诣·驭剑士主动技能):
    名称 = '雷鸣千军破'
    所在等级 = 40
    等级上限 = 60
    基础等级 = 33
    CD = 20.0
    基础 = 367.47
    成长 = 41.54
    攻击次数 = 3
    基础2 = 367.47
    成长2 = 41.54
    攻击次数2 = 8
    基础3 = 464.32
    成长3 = 41.68
    攻击次数3 = 8
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.基础 *= 1.07
        self.成长 *= 1.07
        self.基础2 *= 1.07
        self.成长2 *= 1.07
        self.攻击次数2 = 12

class 极诣·驭剑士技能16(极诣·驭剑士主动技能):
    名称 = '恶即斩'
    所在等级 = 45
    等级上限 = 60
    基础等级 = 31
    基础 = 797.90
    成长 = 90.10
    攻击次数 = 15
    基础2 = 6562.93
    成长2 = 741.07
    攻击次数2 = 1
    CD = 40.0
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.基础 *= 1.19
        self.成长 *= 1.19
        self.基础2 *= 1.17
        self.成长2 *= 1.17
        self.CD *= 0.95

class 极诣·驭剑士技能17(极诣·驭剑士主动技能):
    名称 = '极·驭剑术（时空斩）'
    所在等级 = 50
    等级上限 = 40
    基础等级 = 12
    基础 = 37306.22
    成长 = 11264.78
    CD = 145.0

class 极诣·驭剑士技能18(被动技能):
    名称 = '斩魂术'
    所在等级 = 48
    等级上限 = 40
    基础等级 = 20
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(0.995 + 0.02 * self.等级, 5)

class 极诣·驭剑士技能19(极诣·驭剑士主动技能):
    名称 = '裂刃天冲'
    所在等级 = 60
    等级上限 = 40
    基础等级 = 23
    基础 = 5876.73
    成长 = 664.27
    基础2 = 7188.27
    成长2 = 811.73
    攻击次数2 = 1
    CD = 30.0
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.基础 *= 0
        self.成长 *= 0
        self.基础2 *= 2.12
        self.成长2 *= 2.12
        self.CD *= 0.95

class 极诣·驭剑士技能20(极诣·驭剑士主动技能):
    名称 = '幻剑阵'
    所在等级 = 70
    等级上限 = 40
    基础等级 = 18
    基础 = 12446.35
    成长 = 1405.65
    基础2 = 12448.41
    成长2 = 1405.59
    攻击次数2 = 1
    CD = 50.0
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1
    def 装备护石(self):
        self.攻击次数 = 0
        self.攻击次数2 *= 0.50 * 4 * 1.18
   

class 极诣·驭剑士技能21(极诣·驭剑士主动技能):
    名称 = '破剑阵'
    所在等级 = 80
    等级上限 = 40
    基础等级 = 13
    #瞬爆
    基础 = 35064.00
    成长 = 3960.00
    #不瞬爆
    基础2 = 42740.67
    成长2 = 4823.33
    CD = 45.0


class 极诣·驭剑士技能22(被动技能):
    名称 = '帝皇盟约'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 11

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.28 + 0.02 * self.等级, 5)

    def 物理攻击力倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.28 + 0.02 * self.等级, 5)

class 极诣·驭剑士技能23(极诣·驭剑士主动技能):
    名称 = '飓风魔剑'
    所在等级 = 75
    等级上限 = 40
    基础等级 = 16
    基础 = 364.73
    成长 = 41.27
    攻击次数 = 40
    基础2 = 6415.47
    成长2 = 724.53
    攻击次数2 = 1
    
    #魔剑奥义额外增伤
    攻击次数3 = 1
    CD = 25.0

class 极诣·驭剑士技能24(极诣·驭剑士主动技能):
    名称 = '誓约之剑：雷沃汀'
    所在等级 = 85
    等级上限 = 40
    基础等级 = 5
    基础 = 74269.25
    成长 = 22420.75
    CD = 180.0

class 极诣·驭剑士技能25(被动技能):
    名称 = '剑心：魔剑觉醒'
    所在等级 = 95
    等级上限 = 40
    基础等级 = 4
    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.18 + 0.02 * self.等级, 5)

class 极诣·驭剑士技能26(极诣·驭剑士主动技能):
    名称 = '极诣·驭剑术：聚魔剑'
    所在等级 = 95
    等级上限 = 40
    基础等级 = 6
    基础 = 76384.80
    成长 = 8624.20
    CD = 60

class 极诣·驭剑士技能27(极诣·驭剑士主动技能):
    名称 = '誓约之引：万剑之巅'
    所在等级 = 100
    等级上限 = 40
    基础等级 = 2
    基础 = 241292.75
    成长 = 72849.25
    CD = 290.0

    关联技能 = ['无']

    def 加成倍率(self, 武器类型):
        return 0.0


极诣·驭剑士技能列表 = []
i = 0
while i >= 0:
    try:
        exec('极诣·驭剑士技能列表.append(极诣·驭剑士技能'+str(i)+'())')
        i += 1
    except:
        i = -1

极诣·驭剑士技能序号 = dict()
for i in range(len(极诣·驭剑士技能列表)):
    极诣·驭剑士技能序号[极诣·驭剑士技能列表[i].名称] = i

极诣·驭剑士一觉序号 = 0
极诣·驭剑士二觉序号 = 0
极诣·驭剑士三觉序号 = 0
for i in 极诣·驭剑士技能列表:
    if i.所在等级 == 50:
        极诣·驭剑士一觉序号 = 极诣·驭剑士技能序号[i.名称]
    if i.所在等级 == 85:
        极诣·驭剑士二觉序号 = 极诣·驭剑士技能序号[i.名称]
    if i.所在等级 == 100:
        极诣·驭剑士三觉序号 = 极诣·驭剑士技能序号[i.名称]

极诣·驭剑士护石选项 = ['无']
for i in 极诣·驭剑士技能列表:
    if i.是否有伤害 == 1 and i.是否有护石 == 1:
        极诣·驭剑士护石选项.append(i.名称)

极诣·驭剑士符文选项 = ['无']
for i in 极诣·驭剑士技能列表:
    if i.所在等级 >= 20 and i.所在等级 <= 80 and i.所在等级 != 50 and i.是否有伤害 == 1:
        极诣·驭剑士符文选项.append(i.名称)

class 极诣·驭剑士角色属性(角色属性):

    职业名称 = '极诣·驭剑士'

    武器选项 = ['巨剑', '短剑', '太刀', '钝器']
    
    #'物理百分比','魔法百分比','物理固伤','魔法固伤'
    伤害类型选择 = ['物理百分比']
    
    #默认
    伤害类型 = '物理百分比'
    防具类型 = '轻甲'
    防具精通属性 = ['力量']

    主BUFF = 1.71
    武器类型 = '巨剑'
   
    #基础属性(含唤醒)
    基础力量 = 920.0
    基础智力 = 830.0
    
    #适用系统奶加成
    力量 = 基础力量
    智力 = 基础智力

    #人物基础 + 唤醒
    物理攻击力 = 65.0
    魔法攻击力 = 65.0
    独立攻击力 = 1045.0
    火属性强化 = 13
    冰属性强化 = 13
    光属性强化 = 13
    暗属性强化 = 13

    破剑阵开关 = 0
    钻头蓄力开关 = 0
    魔剑降临 = 0
    魔剑堆叠层数 = 0
    冰刀三绝斩倍率 = 1

    def __init__(self):
        self.技能栏= deepcopy(极诣·驭剑士技能列表)
        self.技能序号= deepcopy(极诣·驭剑士技能序号)

    def 被动倍率计算(self):
        for i in ['血影之太刀精通','魔性之短剑精通','毁灭之巨剑精通','波动之钝器精通']:
            if self.武器类型 not in i:
                self.技能栏[self.技能序号[i]].关联技能 = ['无']
        super().被动倍率计算()
        if self.武器类型 == '巨剑':
            self.技能栏[self.技能序号['破军旋舞斩']].被动倍率 *= round(1.096 + self.技能栏[self.技能序号['毁灭之巨剑精通']].等级 * 0.004, 3)
            self.技能栏[self.技能序号['恶即斩']].攻击次数2 *= round(1.375 + self.技能栏[self.技能序号['毁灭之巨剑精通']].等级 * 0.005, 3)
        elif self.武器类型 == '短剑':
            self.技能栏[self.技能序号['魔剑奥义']].被动倍率 *= 1.90
            self.技能栏[self.技能序号['魔剑奥义']].短精CD = self.技能栏[self.技能序号['魔性之短剑精通']].奥义CD倍率() #CD的1.3倍计算触发次数
        elif self.武器类型 == '钝器':
            self.技能栏[self.技能序号['穿云破空剑']].攻击次数2 *= round(1.07 + self.技能栏[self.技能序号['波动之钝器精通']].等级 * 0.01, 3)
            self.技能栏[self.技能序号['幻剑术']].攻击次数2 = round(1.0966 + self.技能栏[self.技能序号['波动之钝器精通']].等级 * 0.01345, 5)
            self.技能栏[self.技能序号['雷鸣千军破']].被动倍率 *= round(1.07 + self.技能栏[self.技能序号['波动之钝器精通']].等级 * 0.01, 3)
            self.技能栏[self.技能序号['雷鸣千军破']].攻击次数 *= 0.98
        elif self.武器类型 == '太刀':
            self.技能栏[self.技能序号['瞬影三绝斩']].攻击次数 *= 4 / 3
            self.技能栏[self.技能序号['帝国剑术']].被动倍率 *= 1.26
            self.技能栏[self.技能序号['魔剑降临']].被动倍率 *= round(1.095 + self.技能栏[self.技能序号['波动之钝器精通']].等级 * 0.005, 3)

        #降临选择
        if self.魔剑降临 == 0 or self.魔剑降临 == 1:
            self.技能栏[self.技能序号['魔剑降临']].攻击次数 = 1
            self.技能栏[self.技能序号['魔剑降临']].攻击次数2 = 0
            self.技能栏[self.技能序号['魔剑降临']].攻击次数3 = 0
        elif self.魔剑降临 == 2:
            self.技能栏[self.技能序号['魔剑降临']].攻击次数 = 0
            self.技能栏[self.技能序号['魔剑降临']].攻击次数2 = 1
            self.技能栏[self.技能序号['魔剑降临']].攻击次数3 = 0
        elif self.魔剑降临 == 3:
            self.技能栏[self.技能序号['魔剑降临']].攻击次数 = 0
            self.技能栏[self.技能序号['魔剑降临']].攻击次数2 = 0
            self.技能栏[self.技能序号['魔剑降临']].攻击次数3 = 1

        if self.魔剑降临 == 0 or self.魔剑降临 == 3:
            self.技能栏[self.技能序号['魔剑奥义']].攻击次数 = 0
            self.技能栏[self.技能序号['魔剑奥义']].攻击次数2 = 1
        elif self.魔剑降临 == 1 or self.魔剑降临 == 2:
            self.技能栏[self.技能序号['魔剑奥义']].攻击次数 = 1
            self.技能栏[self.技能序号['魔剑奥义']].攻击次数2 = 0

        #飓风魔剑
        if self.钻头蓄力开关 == 1:
            self.技能栏[self.技能序号['飓风魔剑']].攻击次数 = 40
        else:
            self.技能栏[self.技能序号['飓风魔剑']].攻击次数 = 30

        if self.破剑阵开关 == 1:
            self.技能栏[self.技能序号['破剑阵']].攻击次数 = 1
            self.技能栏[self.技能序号['破剑阵']].攻击次数2 = 0
        else:
            self.技能栏[self.技能序号['破剑阵']].攻击次数 = 0
            self.技能栏[self.技能序号['破剑阵']].攻击次数2 = 1

        self.技能栏[self.技能序号['飓风魔剑']].基础 *= 1 + 0.03 * self.魔剑堆层数
        self.技能栏[self.技能序号['飓风魔剑']].成长 *= 1 + 0.03 * self.魔剑堆层数
        self.技能栏[self.技能序号['飓风魔剑']].基础3 = self.魔剑堆层数 * self.技能栏[self.技能序号['魔剑奥义']].等效百分比(self.武器类型)
        if self.魔剑降临 == 3:
            self.技能栏[self.技能序号['飓风魔剑']].基础3 += self.技能栏[self.技能序号['魔剑奥义']].等效百分比(self.武器类型) * 10 * (0.09 + self.技能栏[self.技能序号['飓风魔剑']].等级/100)

        if self.魔剑降临 == 1:
            self.技能栏[self.技能序号['瞬影三绝斩']].被动倍率 *= self.冰刀三绝斩倍率

    def 伤害计算(self, x = 0):
        
        self.所有属性强化(self.进图属强)
        # Will添加
        self.CD倍率计算()
        self.加算冷却计算()

        self.被动倍率计算()
        self.伤害指数计算()

        技能释放次数=[]
        技能单次伤害=[]
        技能总伤害=[]
    
        #技能单次伤害计算
        for i in self.技能栏:
            if i.是否有伤害==1:
                技能单次伤害.append(i.等效百分比(self.武器类型)*self.伤害指数*i.被动倍率)
            else:
                技能单次伤害.append(0)
        
        if self.武器类型 == '短剑':
            技能单次伤害[self.技能序号['魔剑奥义']] /= 2
      
        #技能释放次数计算
        for i in self.技能栏:
            if i.是否有伤害==1:
                if self.次数输入[self.技能序号[i.名称]] =='/CD':
                    if i.名称 == '魔剑奥义' and self.武器类型 == '短剑':
                        技能释放次数.append(2 * int((self.时间输入 - i.演出时间)/(i.等效CD(self.武器类型) * 1.3) + 1 +i.基础释放次数))
                    else:
                        技能释放次数.append(int((self.时间输入 - i.演出时间)/i.等效CD(self.武器类型) + 1 +i.基础释放次数))
                elif self.次数输入[self.技能序号[i.名称]] != '0':
                    技能释放次数.append(int(self.次数输入[self.技能序号[i.名称]]))
                else:
                    技能释放次数.append(0)
            else:
                技能释放次数.append(0)
    
        #单技能伤害合计
    
        for i in self.技能栏:
            if i.是否有伤害==1 and 技能释放次数[self.技能序号[i.名称]] != 0:
                技能总伤害.append(技能单次伤害[self.技能序号[i.名称]]*技能释放次数[self.技能序号[i.名称]]*(1+self.白兔子技能*0.20+self.年宠技能*0.10*self.宠物次数[self.技能序号[i.名称]]/技能释放次数[self.技能序号[i.名称]]+self.斗神之吼秘药*0.12))
            else:
                技能总伤害.append(0)

        总伤害=0
        for i in self.技能栏:
            总伤害+=技能总伤害[self.技能序号[i.名称]]
        
        if x==0:
            return 总伤害
    
        if x==1:
            详细数据=[]
            for i in range(0,len(self.技能栏)):
                详细数据.append(技能释放次数[i])
                详细数据.append(技能总伤害[i])
                if 技能释放次数[i]!=0:
                    详细数据.append(技能总伤害[i]/技能释放次数[i])
                else:
                    详细数据.append(0)
                if 总伤害!=0:
                    详细数据.append(技能总伤害[i]/总伤害*100)
                else:
                    详细数据.append(0)
            return 详细数据

    def 站街物理攻击力(self, x = 0):
        站街物理攻击 = self.物理攻击力
        if self.技能栏[self.技能序号['帝皇盟约']].等级 != 0:
           站街物理攻击 *= self.技能栏[self.技能序号['帝皇盟约']].物理攻击力倍率(self.武器类型)
           站街物理攻击 = int(站街物理攻击)
        for i in self.技能栏:
            if i.名称 != '帝皇盟约':
                try : 
                    站街物理攻击 *= i.物理攻击力倍率(self.武器类型)
                except : 
                    pass
        if x == 1:
            return 站街物理攻击
        else:
            return 站街物理攻击 * (self.站街力量() / 250 + 1)

    def 面板物理攻击力(self, x = 0):
        面板物理攻击 = self.物理攻击力 + self.进图物理攻击力
        if self.技能栏[self.技能序号['帝皇盟约']].等级 != 0:
           面板物理攻击 *= self.技能栏[self.技能序号['帝皇盟约']].物理攻击力倍率(self.武器类型)
           面板物理攻击 = int(面板物理攻击)
        for i in self.技能栏:
            if i.名称 != '帝皇盟约':
                try : 
                    面板物理攻击 *= i.物理攻击力倍率(self.武器类型)
                except : 
                    pass
        面板物理攻击 *= (1 + self.百分比三攻) * (1 + self.年宠技能 * 0.10 + self.斗神之吼秘药 * 0.12 + self.白兔子技能 * 0.20)
        if x == 1:
            return 面板物理攻击
        else:
            return 面板物理攻击 * (self.面板力量() / 250 + 1) 

class 极诣·驭剑士(角色窗口):
    def 窗口属性输入(self):
        self.初始属性 = 极诣·驭剑士角色属性()
        self.角色属性A = 极诣·驭剑士角色属性()
        self.角色属性B = 极诣·驭剑士角色属性()
        self.一觉序号 = 极诣·驭剑士一觉序号
        self.二觉序号 = 极诣·驭剑士二觉序号
        self.三觉序号 = 极诣·驭剑士三觉序号
        self.护石选项 = deepcopy(极诣·驭剑士护石选项)
        self.符文选项 = deepcopy(极诣·驭剑士符文选项)

    def 界面(self):
        super().界面()

        self.魔剑降临选择=MyQComboBox(self.main_frame2)
        self.魔剑降临选择.addItem('魔剑降临：火')
        self.魔剑降临选择.addItem('魔剑降临：冰')
        self.魔剑降临选择.addItem('魔剑降临：光')
        self.魔剑降临选择.addItem('魔剑降临：暗')
        self.魔剑降临选择.setCurrentIndex(1)
        self.魔剑降临选择.resize(120,20)
        self.魔剑降临选择.move(315,420)

        self.魔剑堆层数选择=MyQComboBox(self.main_frame2)
        self.魔剑堆层数选择.addItem('魔剑堆：0层')
        self.魔剑堆层数选择.addItem('魔剑堆：1层')
        self.魔剑堆层数选择.addItem('魔剑堆：2层')
        self.魔剑堆层数选择.addItem('魔剑堆：3层')
        self.魔剑堆层数选择.addItem('魔剑堆：4层')
        self.魔剑堆层数选择.addItem('魔剑堆：5层')
        self.魔剑堆层数选择.setCurrentIndex(1)
        self.魔剑堆层数选择.resize(120,20)
        self.魔剑堆层数选择.move(315,450)

        self.破剑阵开关=QCheckBox('破剑阵瞬爆',self.main_frame2)
        self.破剑阵开关.resize(100,20)
        self.破剑阵开关.move(325,490)
        self.破剑阵开关.setStyleSheet(复选框样式)
        self.破剑阵开关.setChecked(True)

        self.钻头蓄力开关=QCheckBox('飓风魔剑蓄力',self.main_frame2)
        self.钻头蓄力开关.resize(100,20)
        self.钻头蓄力开关.move(325,520)
        self.钻头蓄力开关.setStyleSheet(复选框样式)
        self.钻头蓄力开关.setChecked(True)

        self.一觉CD=QCheckBox('时空斩CD-10%',self.main_frame2)
        self.一觉CD.resize(100,20)
        self.一觉CD.move(325,550)
        self.一觉CD.setStyleSheet(复选框样式)

        self.冰刀三绝斩倍率=MyQComboBox(self.main_frame2)
        for i in range(0,61):
            self.冰刀三绝斩倍率.addItem('冰三绝斩：'+str(i * 2)+'%')
        self.冰刀三绝斩倍率.setCurrentIndex(7)
        self.冰刀三绝斩倍率.resize(120,20)
        self.冰刀三绝斩倍率.move(315,580)
        self.冰刀三绝斩倍率.setToolTip('请根据自己实测选择')

    def 输入属性(self, 属性, x = 0):
        super().输入属性(属性, x)
        if self.破剑阵开关.isChecked():
            属性.破剑阵开关 = 1

        if self.钻头蓄力开关.isChecked():
            属性.钻头蓄力开关 = 1
        
        if self.一觉CD.isChecked():
            属性.技能冷却缩减(1, 100, 0.10)

        属性.魔剑堆层数 = self.魔剑堆层数选择.currentIndex()
        属性.魔剑降临 = self.魔剑降临选择.currentIndex()
        属性.冰刀三绝斩倍率 = self.冰刀三绝斩倍率.currentIndex() / 50 + 1